import { getProDetails } from "../apis/SummaryOneAPI";

// helper to update server + localStorage (not inside reducer!)
export const updateUserProDetails = async (obj) => {
  try {
    const { data } = await getProDetails.put(obj);
    console.log("Updated:", data);
  } catch (err) {
    console.error("Update failed", err);
  }
};

// plain action creators (no args needed)
export const incrementAiReport = () => {
  // update localStorage
  const current = Number(localStorage.getItem("counterAiReport")) || 0;
  const newValue = current + 1;
  localStorage.setItem("counterAiReport", newValue);

  // update API
  updateUserProDetails({ counter_ai_report: newValue });

  return {
    type: "INCREMENT_AI_REPORT",
  };
};

export const incrementApiInteraction = () => {
  const current = Number(localStorage.getItem("counterApiInteraction")) || 0;
  const newValue = current + 1;
  localStorage.setItem("counterApiInteraction", newValue);

  updateUserProDetails({ counter_interactions: newValue });

  return {
    type: "INCREMENT_API_INTERACTION",
  };
};

export const setCounters = () => {
  const counterAiReport = Number(localStorage.getItem("counterAiReport")) || 0;
  const counterApiInteraction =
    Number(localStorage.getItem("counterApiInteraction")) || 0;

  return {
    type: "SET_COUNTERS",
    payload: { counterAiReport, counterApiInteraction },
  };
};
