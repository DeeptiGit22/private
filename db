import React, { useRef } from "react";
import "./ProStyle.css";

function UpgradeRequestForm({
    mode, // 'view', 'resubmit', 'create'
    title,
    plan,
    requester,
    rejectJustification,
    justification,
    comment,
    attachment,
    onPlanChange,
    onJustificationChange,
    onCommentChange,
    onSubmit,
    onDiscard,
    onViewAttachment,
    onFileSelect,
    loading,
    children,
    showClose,
    onClose,
    status
}) {
    
    const fileInputRef = useRef(null);

    const handleIconClick = () => {
        if (fileInputRef.current) {
            fileInputRef.current.click();
        }
    };
    return (
        <div
            style={{
                position: "fixed",
                inset: 0,
                zIndex: 9999,
                background: "rgba(0, 0, 0, 0.42)",
                display: "flex",
                alignItems: "center",
                justifyContent: "center",
                minHeight: "100vh",
                minWidth: "100vw",
            }}
            tabIndex={-1}
        >
            <div style={{ position: "relative" }}>
                <div
                    style={{
                        background: "#fff",
                        maxWidth: 700,
                        margin: "30px auto",
                        borderRadius: 16,
                        boxShadow: "0 2px 16px rgba(0,0,0,0.06)",
                        padding: "20px",
                        fontFamily: "Montserrat, Arial, sans-serif",
                        textAlign: "center",
                        position: "relative",
                        minWidth: "500px",
                    }}
                >
                    {/* Close Button */}
                    {showClose && <div
                        style={{ position: "absolute", top: 10, right: 20, fontSize: 28, color: "#333", cursor: "pointer", zIndex: 10 }}
                        onClick={onClose}
                        tabIndex={0}
                        aria-label="Close"
                        role="button"
                    >
                        Ã—
                    </div>}
                    <div className="upgrade-request-form">
                        <h2
                            style={{
                                marginBottom: "20px",
                                fontSize: "22px",
                                fontWeight: 700,
                                color: "#484848",
                                fontFamily: "Inter",
                            }}
                        >
                            {title}
                        </h2>

                        {/* Plan Field */}
                        <div className="form-section">
                            <label style={mode === "create" ? { color: "#484848" } : {}}>
                                Upgrade Plan to
                            </label>
                            <input
                                style={mode === "create" ? { color: "#484848" } : {}}
                                value={plan}
                                onChange={onPlanChange}
                                disabled={mode === "resubmit"}
                                name='plan'
                            />
                        </div>

                        {/* Requester (view only) */}
                        {mode === "view" && (
                            <div className="form-section">
                                <label>Request From</label>
                                <input value={requester} disabled name="assigned_by" />
                            </div>
                        )}

                        {/* Reject Justification (resubmit only) */}
                        {mode === "resubmit" && (
                            <div className="form-section">
                                <label>Justification of Rejection</label>

                                <textarea value={rejectJustification} disabled />
                            </div>
                        )}

                        {/* Justification */}
                        <div className="form-section">
                            <label
                                style={
                                    mode === "create" || mode === "resubmit"
                                        ? { color: "#484848" }
                                        : {}
                                }
                            >
                                Justification
                            </label>
                            <textarea
                                style={
                                    mode === "create" || mode === "resubmit"
                                        ? { color: "#484848" }
                                        : {}
                                }
                                name="description"
                                value={justification}
                                onChange={onJustificationChange}
                            />
                        </div>

                        {/* Attachment */}
                      {/* Attachment */}
<div className="form-section">
  <label>Attachment</label>
  <div
    className="attachment-row"
    style={{
      width: "100%",
      display: "flex",
      flexDirection: "column",
      gap: "8px",
      padding: "8px",
      borderRadius: "8px",
      border: "1px solid #ccc",
      alignItems: "flex-start",
    }}
  >
    {/* Hidden file input */}
    <input
      type="file"
      ref={fileInputRef}
      multiple
      onChange={(e) => {
        Array.from(e.target.files).forEach(file => onFileSelect(file));
      }}
      style={{ display: "none" }}
      disabled={mode === "view"}
      accept="image/*,.pdf,.doc,.docx"
    />

<div style={{display:'flex',justifyContent:'space-between',width:'100%',alignItems:'center'}}>
{Array.isArray(attachment) && attachment.length > 0 ? (
      attachment.map((file, idx) => (
        <div key={idx} style={{ display: "flex", justifyContent: "space-between", width: "100%" }}>
          <span style={{ fontSize: "14px", color: "#000" }}>
            {file.name || file}
          </span>
          {mode === "view" && (
            <a
              onClick={() => onViewAttachment(file.key)}
              style={{ cursor: "pointer", color: "#1890ff" }}
            >
              View
            </a>
          )}
        </div>
      ))
    ) : (
      <span style={{ fontSize: "14px", color: "#B2B2B2" }}>No files chosen</span>
    )}

    {mode !== "view" && (
      <span onClick={handleIconClick} style={{ fontSize: "18px", cursor: "pointer" }}>
        ðŸ“Ž
      </span>
    )}
</div>
  </div>
</div>


                        {/* Comment (view only) */}
                        {mode === "view" && (
                            <div className="form-section" style={{ color: "#484848" }}>
                                <label>Comment</label>
                                <textarea
                                    value={comment}
                                    name='assignee_response'
                                    onChange={onCommentChange}
                                    style={{ color: "#484848" }}
                                    disabled={mode === "create"}
                                />
                            </div>
                        )}

                        {/* Actions */}
                        <div className="form-actions">
                            {mode === "view" ? (
                               status == 'Closed' ? '' :  <>
                                <button
                                    className="approve-btn"
                                    onClick={onSubmit}
                                >
                                    Approve Request
                                </button>
                                <button className="discard-btn" onClick={onDiscard}>
                                    Discard Request
                                </button>
                            </>
                            ) : mode === "resubmit" ? (
                                <button className="resubmit-btn" onClick={onSubmit}>
                                    {loading ? 'loading...' : 'Re-Submit Request'}
                                </button>
                            ) : (
                                <button className="submit-btn" onClick={onSubmit}>
                                    {loading ? 'loading...' : 'Submit Request'}
                                </button>
                            )}
                        </div>
                    </div>
                    {children}
                </div>
            </div>
        </div>
    );
}

export default UpgradeRequestForm;


   {showCreateRequest && (
        <UpgradeRequestForm
          mode="create"
          title="Create Upgrade Request"
          plan={formData.plan}
          justification={formData.description}
          comment={formData.comment}
          onPlanChange={(e) => handleChange("plan", e.target.value)}
          onJustificationChange={(e) =>
            handleChange("description", e.target.value)
          }
          onFileSelect={handleUpgradeFileSelect}
          attachment={upgradeFiles}
          onSubmit={handleSubmit}
          loading={loading}
        >
          <div
            style={{
              display: "flex",
              justifyContent: "center",
              gap: "10px",
              marginTop: "20px",
              width: "100%",
            }}
          >
            <button
              style={{
                padding: "8px 16px",
                width: "100%",
                backgroundColor: "#484848",
                color: "#fff",
                border: "none",
                borderRadius: "4px",
              }}
              onClick={() => {
                setShowCreateRequest(false);
                setShowLimitExhaust(false);
                setShowViewPlans(true);
              }}
            >
              View Plans
            </button>
            <button
              style={{
                padding: "8px 16px",
                width: "100%",
                backgroundColor: "#484848",
                color: "#fff",
                border: "none",
                borderRadius: "4px",
              }}
            >
              Logout
            </button>
          </div>
        </UpgradeRequestForm>
      )}

